apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: %{name}
  namespace: %{namespace}
  labels:
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch-%{name}
    app.kubernetes.io/version: %{version}
    app.kubernetes.io/part-of: %{name}
    app.kubernetes.io/managed-by: opensearch-operator
    opensearch.reclaim-the-stack.com/cluster: %{name}
  ownerReferences: %{owner_references}
spec:
  serviceName: opensearch-%{name}
  # To reach quorum during bootstrapping we can't wait for each pod to be ready before starting the next
  podManagementPolicy: Parallel
  replicas: %{replicas}
  selector:
    matchLabels:
      opensearch.reclaim-the-stack.com/cluster: %{name}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: opensearch
        app.kubernetes.io/instance: opensearch-%{name}
        app.kubernetes.io/version: %{version}
        app.kubernetes.io/part-of: %{name}
        app.kubernetes.io/managed-by: opensearch-operator
        opensearch.reclaim-the-stack.com/cluster: %{name}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: opensearch.reclaim-the-stack.com/cluster
                    operator: In
                    values:
                      - %{name}
              topologyKey: kubernetes.io/hostname
      nodeSelector: %{node_selector}
      tolerations: %{tolerations}
      containers:
        - name: opensearch
          image: %{image}
          command:
            - bash
            - -c
            - %{startup_script}
          ports:
            - name: "http"
              containerPort: 9200
            - name: "transport"
              containerPort: 9300
            - name: "metrics"
              containerPort: 9600
          env:
            - name: OPENSEARCH_JAVA_OPTS
              value: "-Xms%{heap_size} -Xmx%{heap_size}"
            - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: opensearch-%{name}-credentials
                  key: admin_password
          volumeMounts:
            - name: data
              mountPath: /usr/share/opensearch/data
            - name: certificates
              mountPath: /usr/share/opensearch/config/certs
              readOnly: true
            - name: internal-users
              mountPath: /usr/share/opensearch/config/opensearch-security/internal_users.yml
              subPath: internal_users.yml
              readOnly: true
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - bash
                - -c
                - curl --fail --silent --max-time 2 -o /dev/null -u "admin:$OPENSEARCH_INITIAL_ADMIN_PASSWORD" http://localhost:9200/_cluster/health
          resources: %{resources}
      volumes:
        - name: certificates
          secret:
            secretName: opensearch-%{name}-certificates
        - name: internal-users
          configMap:
            name: opensearch-%{name}-security-config
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Delete
  volumeClaimTemplates:
    - metadata:
        name: "data"
      spec:
        accessModes: [ReadWriteOnce]
        resources: { requests: { storage: %{disk_size} } }
